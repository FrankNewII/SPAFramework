;(function (common) {
  "use strict";

  common.components.add('FlickrResultComponent', FlickrResultComponent);

  function FlickrResultComponent() {
    this.element.addListener('click', this.addToChoosed.bind(this));
    this.pictures = [];
  };

  FlickrResultComponent.prototype.addToChoosed = function (e) {
    var picturesPosition = this.photos.indexOf(e.target);
    var target = e.target;

    if(~picturesPosition) {
      this.parent.choose(target.getAttribute('src'), this.deletePhotoFromViewedInResults.bind(this));
    }
  };

  FlickrResultComponent.prototype.deletePhotoFromViewedInResults = function () {}

  FlickrResultComponent.prototype.show = function (photos) {
    var result = document.createDocumentFragment();
    this.pictures = [];
    var img;

    for (var photo in photos) {
      img = new Image;
      img.src = "https://c1.staticflickr.com/1/"+photo.server+"/"+photo.id+"_"+ photo.secret+"_n.jpg";
      result.appendChild(img);
      this.pictures.push(img);
    }

    this.element.innerHTML = result.innerHTML;
  };
})(common);
;(function (common) {
    "use strict";

    common.components.add('MainController', MainController);

    var flickr = common.models.get('flickr')();
    var events = common.events;

    MainController.inject = ['element'];
    function MainController(elem) {
        this.element = elem();
        this.test = 23;

        this.testForeach = Array(232, 4, 353, 5, 3, 43);
        var i = 0;

        var self = this;
        for (var b = 0; b < this.testForeach; b++) {
            this.testForeach[b] = b;
        }

        this.photos = undefined;

        events.on('sell', this, function (photos) {
            console.log(this, photos, this.photos);

            this.photos = photos;
        }.bind(this));

        this.element.addListener('click', this.randomize.bind(this));

    }

    MainController.prototype.flickSearch = function (v, cb) {
        flickr.search(v, cb);
    };

    MainController.prototype.chooseImage = function (params, cb) {
        cb(params);
    };

    MainController.prototype.randomize = function () {
        var nArr = [];
        for ( var i in this.testForeach ) {
            nArr.push(Math.ceil(Math.random() * 100));
        }

        this.testForeach = nArr;
    };
})(common);
(function (common) {
    "use strict";

    common.components.add('SearchComponent', SearchComponent);

    SearchComponent.inject = ['element', 'parentComponent'];

    var events = common.events;

    function SearchComponent(element, parent) {
        this.element = element();
        this.parent = parent();
        this.element.addListener('click', this.search.bind(this));
        this.element.addListener('keyup', this.change.bind(this));
    }

    SearchComponent.prototype.search = function (e) {

        if (e.target.getAttribute('role') === 'button') {
            var query = this.element.searchIn('[type=text]').getValue();
            this.parent.flickSearch(query, function (res) {

                var response = JSON.parse(res);
                events.emit('sell', this, response.photos.photo);
            }.bind(this));
        }
    }

    SearchComponent.prototype.change = function (e) {
        this.parent.test = this.element.searchIn('[type=text]').getValue();
    }

})(common);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZsaWNrclJlc3VsdHNDb21wb25lbnQuanMiLCJNYWluQ29udHJvbGxlci5qcyIsIlNlYXJjaENvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNuQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2pEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiYXBwbGljYXRpb24uY29tcG9uZW50cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyI7KGZ1bmN0aW9uIChjb21tb24pIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgY29tbW9uLmNvbXBvbmVudHMuYWRkKCdGbGlja3JSZXN1bHRDb21wb25lbnQnLCBGbGlja3JSZXN1bHRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEZsaWNrclJlc3VsdENvbXBvbmVudCgpIHtcbiAgICB0aGlzLmVsZW1lbnQuYWRkTGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5hZGRUb0Nob29zZWQuYmluZCh0aGlzKSk7XG4gICAgdGhpcy5waWN0dXJlcyA9IFtdO1xuICB9O1xuXG4gIEZsaWNrclJlc3VsdENvbXBvbmVudC5wcm90b3R5cGUuYWRkVG9DaG9vc2VkID0gZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgcGljdHVyZXNQb3NpdGlvbiA9IHRoaXMucGhvdG9zLmluZGV4T2YoZS50YXJnZXQpO1xuICAgIHZhciB0YXJnZXQgPSBlLnRhcmdldDtcblxuICAgIGlmKH5waWN0dXJlc1Bvc2l0aW9uKSB7XG4gICAgICB0aGlzLnBhcmVudC5jaG9vc2UodGFyZ2V0LmdldEF0dHJpYnV0ZSgnc3JjJyksIHRoaXMuZGVsZXRlUGhvdG9Gcm9tVmlld2VkSW5SZXN1bHRzLmJpbmQodGhpcykpO1xuICAgIH1cbiAgfTtcblxuICBGbGlja3JSZXN1bHRDb21wb25lbnQucHJvdG90eXBlLmRlbGV0ZVBob3RvRnJvbVZpZXdlZEluUmVzdWx0cyA9IGZ1bmN0aW9uICgpIHt9XG5cbiAgRmxpY2tyUmVzdWx0Q29tcG9uZW50LnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKHBob3Rvcykge1xuICAgIHZhciByZXN1bHQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG4gICAgdGhpcy5waWN0dXJlcyA9IFtdO1xuICAgIHZhciBpbWc7XG5cbiAgICBmb3IgKHZhciBwaG90byBpbiBwaG90b3MpIHtcbiAgICAgIGltZyA9IG5ldyBJbWFnZTtcbiAgICAgIGltZy5zcmMgPSBcImh0dHBzOi8vYzEuc3RhdGljZmxpY2tyLmNvbS8xL1wiK3Bob3RvLnNlcnZlcitcIi9cIitwaG90by5pZCtcIl9cIisgcGhvdG8uc2VjcmV0K1wiX24uanBnXCI7XG4gICAgICByZXN1bHQuYXBwZW5kQ2hpbGQoaW1nKTtcbiAgICAgIHRoaXMucGljdHVyZXMucHVzaChpbWcpO1xuICAgIH1cblxuICAgIHRoaXMuZWxlbWVudC5pbm5lckhUTUwgPSByZXN1bHQuaW5uZXJIVE1MO1xuICB9O1xufSkoY29tbW9uKTsiLCI7KGZ1bmN0aW9uIChjb21tb24pIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIGNvbW1vbi5jb21wb25lbnRzLmFkZCgnTWFpbkNvbnRyb2xsZXInLCBNYWluQ29udHJvbGxlcik7XG5cbiAgICB2YXIgZmxpY2tyID0gY29tbW9uLm1vZGVscy5nZXQoJ2ZsaWNrcicpKCk7XG4gICAgdmFyIGV2ZW50cyA9IGNvbW1vbi5ldmVudHM7XG5cbiAgICBNYWluQ29udHJvbGxlci5pbmplY3QgPSBbJ2VsZW1lbnQnXTtcbiAgICBmdW5jdGlvbiBNYWluQ29udHJvbGxlcihlbGVtKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW0oKTtcbiAgICAgICAgdGhpcy50ZXN0ID0gMjM7XG5cbiAgICAgICAgdGhpcy50ZXN0Rm9yZWFjaCA9IEFycmF5KDIzMiwgNCwgMzUzLCA1LCAzLCA0Myk7XG4gICAgICAgIHZhciBpID0gMDtcblxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIGZvciAodmFyIGIgPSAwOyBiIDwgdGhpcy50ZXN0Rm9yZWFjaDsgYisrKSB7XG4gICAgICAgICAgICB0aGlzLnRlc3RGb3JlYWNoW2JdID0gYjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMucGhvdG9zID0gdW5kZWZpbmVkO1xuXG4gICAgICAgIGV2ZW50cy5vbignc2VsbCcsIHRoaXMsIGZ1bmN0aW9uIChwaG90b3MpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMsIHBob3RvcywgdGhpcy5waG90b3MpO1xuXG4gICAgICAgICAgICB0aGlzLnBob3RvcyA9IHBob3RvcztcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcblxuICAgICAgICB0aGlzLmVsZW1lbnQuYWRkTGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5yYW5kb21pemUuYmluZCh0aGlzKSk7XG5cbiAgICB9XG5cbiAgICBNYWluQ29udHJvbGxlci5wcm90b3R5cGUuZmxpY2tTZWFyY2ggPSBmdW5jdGlvbiAodiwgY2IpIHtcbiAgICAgICAgZmxpY2tyLnNlYXJjaCh2LCBjYik7XG4gICAgfTtcblxuICAgIE1haW5Db250cm9sbGVyLnByb3RvdHlwZS5jaG9vc2VJbWFnZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNiKSB7XG4gICAgICAgIGNiKHBhcmFtcyk7XG4gICAgfTtcblxuICAgIE1haW5Db250cm9sbGVyLnByb3RvdHlwZS5yYW5kb21pemUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBuQXJyID0gW107XG4gICAgICAgIGZvciAoIHZhciBpIGluIHRoaXMudGVzdEZvcmVhY2ggKSB7XG4gICAgICAgICAgICBuQXJyLnB1c2goTWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiAxMDApKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudGVzdEZvcmVhY2ggPSBuQXJyO1xuICAgIH07XG59KShjb21tb24pOyIsIihmdW5jdGlvbiAoY29tbW9uKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICBjb21tb24uY29tcG9uZW50cy5hZGQoJ1NlYXJjaENvbXBvbmVudCcsIFNlYXJjaENvbXBvbmVudCk7XG5cbiAgICBTZWFyY2hDb21wb25lbnQuaW5qZWN0ID0gWydlbGVtZW50JywgJ3BhcmVudENvbXBvbmVudCddO1xuXG4gICAgdmFyIGV2ZW50cyA9IGNvbW1vbi5ldmVudHM7XG5cbiAgICBmdW5jdGlvbiBTZWFyY2hDb21wb25lbnQoZWxlbWVudCwgcGFyZW50KSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQoKTtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQoKTtcbiAgICAgICAgdGhpcy5lbGVtZW50LmFkZExpc3RlbmVyKCdjbGljaycsIHRoaXMuc2VhcmNoLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmVsZW1lbnQuYWRkTGlzdGVuZXIoJ2tleXVwJywgdGhpcy5jaGFuZ2UuYmluZCh0aGlzKSk7XG4gICAgfVxuXG4gICAgU2VhcmNoQ29tcG9uZW50LnByb3RvdHlwZS5zZWFyY2ggPSBmdW5jdGlvbiAoZSkge1xuXG4gICAgICAgIGlmIChlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ3JvbGUnKSA9PT0gJ2J1dHRvbicpIHtcbiAgICAgICAgICAgIHZhciBxdWVyeSA9IHRoaXMuZWxlbWVudC5zZWFyY2hJbignW3R5cGU9dGV4dF0nKS5nZXRWYWx1ZSgpO1xuICAgICAgICAgICAgdGhpcy5wYXJlbnQuZmxpY2tTZWFyY2gocXVlcnksIGZ1bmN0aW9uIChyZXMpIHtcblxuICAgICAgICAgICAgICAgIHZhciByZXNwb25zZSA9IEpTT04ucGFyc2UocmVzKTtcbiAgICAgICAgICAgICAgICBldmVudHMuZW1pdCgnc2VsbCcsIHRoaXMsIHJlc3BvbnNlLnBob3Rvcy5waG90byk7XG4gICAgICAgICAgICB9LmJpbmQodGhpcykpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgU2VhcmNoQ29tcG9uZW50LnByb3RvdHlwZS5jaGFuZ2UgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICB0aGlzLnBhcmVudC50ZXN0ID0gdGhpcy5lbGVtZW50LnNlYXJjaEluKCdbdHlwZT10ZXh0XScpLmdldFZhbHVlKCk7XG4gICAgfVxuXG59KShjb21tb24pOyJdfQ==
