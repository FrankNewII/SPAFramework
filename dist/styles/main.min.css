/*! normalize.css v2.1.2 | MIT License | git.io/normalize */img,legend{border:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body,figure{margin:0}a:focus{outline:dotted thin}a:active,a:hover{outline:0}h1{font-size:2em;margin:.67em 0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}hr{box-sizing:content-box;height:0}mark{background:#ff0;color:#000}code,kbd,pre,samp{font-family:monospace,serif;font-size:1em}pre{white-space:pre-wrap}q{quotes:"\201C" "\201D" "\2018" "\2019"}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{padding:0}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset]{cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[tipe=radio],input[type=checkbox]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}gallery-component{margin:0 auto;width:100%;display:block}gallery-component .pictureWrapper{height:200px;width:20px;transition:background-color,opacity,color .3s;background-color:#fff}gallery-component .pictureWrapper.loading{background-color:azure;pointer-events:none}search-component{display:block;width:100%}search-component button{border:0 solid;background-color:#fff;font-weight:600;transition:color,text-shadow,box-shadow .3s;color:#ddd;text-shadow:1px 1px 1px #655f5f;box-shadow:inset 0 0 0 rgba(123,22,32,.5);cursor:pointer}search-component button:hover{box-shadow:inset 150px 0 0 #000;color:#fff;text-shadow:1px 1px 1px #fff}search-component input{box-shadow:0 0 2px gray;border:none;transition:box-shadow .3s}search-component input:focus{outline:0;box-shadow:0 0 5px gray}.container{margin:0 auto;width:800px;box-shadow:0 0 5px gray;min-height:130px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
